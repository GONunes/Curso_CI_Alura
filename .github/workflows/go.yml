name: Go

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
    
  workflow_dispatch:

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go_version: ['1.18', '1.17', '>=1.18']
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go_version }}
      
    - name: Build-DB
      run: docker-compose build
      
    - name: Create-DB
      run: docker-compose up -d

    - name: Test
      run: go test -v main_test.go 
      
  
  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest', 'ubuntu-20.04']
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: go build -v main.go
      
      
  deploy:
      needs: build
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: ['ubuntu-latest', 'ubuntu-20.04']
      
      steps:
        
        - name: Deploy Docker
          env:
            DOCKER_USER: ${{ secrets.DOCKER_USER }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          run: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker build /home/runner/work/Curso_CI_Alura/Dockerfile -t $DOCKER_USER/go-app:latest
            docker push $DOCKER_USER/go-app:latest
          
        - name: Config Container on VM
          run: |
            ssh aws-cloud "sudo docker pull $DOCKER_USER/go-app:latest"
            ssh aws-cloud "sudo docker run -d --name go-app -p 8080:8080 --restart unless-stopped $DOCKER_USER/go-app:latest"
